import '@atcute/bluesky/lexicons';
import type { AppBskyRichtextFacet, At } from '@atcute/client/lexicons';
type UnwrapArray<T> = T extends (infer V)[] ? V : never;
/** Facet interface, `app.bsky.richtext.facet#main` from the lexicon */
export type Facet = AppBskyRichtextFacet.Main;
/** Feature union type from Facet['features'] */
export type FacetFeature = UnwrapArray<Facet['features']>;
/** Resulting rich text */
export interface BakedRichtext {
    text: string;
    facets: Facet[];
}
/** Builder for constructing Bluesky rich texts */
declare class RichtextBuilder {
    #private;
    /** Resulting composed text */
    get text(): string;
    /** Resulting composed facets */
    get facets(): Facet[];
    /** Retrieve the composed rich text */
    build(): BakedRichtext;
    /** Clone rich text builder instance */
    clone(): RichtextBuilder;
    /**
     * Add plain text to the rich text
     * @param substr The plain text
     * @returns The builder instance, for chaining
     */
    addText(substr: string): this;
    /**
     * Add decorated text to the rich text
     * @param substr The text itself
     * @param feature Feature to imbue on the text
     * @returns The builder instance, for chaining
     */
    addDecoratedText(substr: string, feature: FacetFeature): this;
    /**
     * Add link to the rich text
     * @param substr Text of the link
     * @param uri Valid URL, for example: https://example.com
     * @returns The builder instance, for chaining
     */
    addLink(substr: string, uri: string): this;
    /**
     * Mentions a user in rich text
     * @param substr Text of the mention, this is usually in the form of `@handle`
     * @param did Valid DID, for example: did:plc:ia76kvnndjutgedggx2ibrem
     * @returns The builder instance, for chaining
     */
    addMention(substr: string, did: At.DID): this;
    /**
     * Add inline hashtag to the rich text
     * @param tag The tag, without the pound prefix
     * @returns THe builder instance, for chaining
     */
    addTag(tag: string): this;
}
export default RichtextBuilder;
