export declare class RateLimitThreshold {
    private requests;
    static sleep(ms: number): Promise<void>;
    private queue;
    private readonly period;
    /**
     * @param requests Number of allowed requests with period
     * @param period Period in milliseconds
     */
    constructor(requests: number, period: number);
    /**
     * Call limit before the function you want call no more than `requests` in per `period`.
     * @return Resolved when timeout completed comply with rate limit threshold
     */
    limit(): Promise<number>;
}
