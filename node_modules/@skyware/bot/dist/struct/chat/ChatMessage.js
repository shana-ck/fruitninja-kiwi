import { Facet } from "../post/Facet.js";
import { BaseChatMessage } from "./BaseChatMessage.js";
/**
 * Represents a message in a chat conversation.
 */
export class ChatMessage extends BaseChatMessage {
    /** The message's text. */
    text;
    /** Annotations of text (mentions, URLs, hashtags, etc) */
    facets;
    /** An embedded reference to a record. */
    embed;
    /**
     * @param data Data used to construct the message.
     * @param bot The active Bot instance.
     */
    constructor({ text, facets, embed, ...props }, bot) {
        super(props, bot);
        this.text = text;
        if (facets)
            this.facets = facets;
        if (embed)
            this.embed = embed;
    }
    /**
     * Constructs an instance from a MessageView.
     */
    static fromView(view, bot, conversationId) {
        const message = new ChatMessage({
            id: view.id,
            text: view.text,
            conversationId: conversationId,
            sender: view.sender,
            sentAt: new Date(view.sentAt),
            facets: view.facets?.map((facet) => new Facet(view.text, facet)),
            embed: view.embed?.$type === "app.bsky.embed.record#view"
                && view.embed.record.$type === "app.bsky.embed.record#viewRecord"
                ? view.embed.record
                : undefined,
        }, bot);
        return message;
    }
}
