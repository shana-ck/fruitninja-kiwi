import { AppBskyRichtextFacet } from "@atproto/api";
import type { Bot } from "../bot/Bot.js";
/** Returns the number of graphemes in a given string. */
export declare function graphemeLength(text: string): number;
/**
 * Used to build a rich text string with facets.
 * @see https://docs.bsky.app/docs/advanced-guides/post-richtext
 */
export declare class RichText {
    private buffer;
    private facets;
    /**
     * Completes the rich text string and returns the result, with parsed facets
     * and the length of the string in graphemes.
     */
    build(): {
        text: string;
        facets: Array<AppBskyRichtextFacet.Main>;
        length: number;
    };
    private feature;
    /** Append a string. */
    text(substr: string): this;
    /** Append a mention. */
    mention(handle: string, did: string): this;
    /**
     * Append a link.
     * You can use the `uri` parameter to specify a different URI than the `substr`.
     * @example Create a hyperlink
     * ```ts
     * new RichText().text("Go to ").link("https://bsky.app").build();
     * ```
     * @example Create a hyperlink with custom text
     * ```ts
     * new RichText().text("Go to ").link("Bluesky", "https://bsky.app").build();
     * ```
     */
    link(substr: string, uri?: string): this;
    /** Append a tag. */
    tag(tag: string): this;
    /**
     * Returns a RichText instance with all facets (mentions, links, tags, etc) resolved.
     * @param text The text to detect facets in.
     * @param bot Used to resolve mentions to DIDs.
     */
    static detectFacets(text: string, bot: Bot): Promise<AppBskyRichtextFacet.Main[]>;
    /**
     * Detects rich text facets in a string (mentions, links, tags, etc).
     * Will produce invalid facets! For instance, mentions will not have their DIDs set.
     * Use {@link detectFacets} to produce valid facets that can be attached to a post.
     */
    static detectFacetsWithoutResolution: (text: string) => Array<AppBskyRichtextFacet.Main>;
}
